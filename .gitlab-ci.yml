stages:
  - test
  - build
  - deploy


variables:
  IMAGE_NAME: $ECR_REGISTRY/devops-erenduyuk-pyeditorial
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA


test:
  stage: test
  image: python:3.9.19-slim
  script:
    - echo "test"
  allow_failure: false

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apk add aws-cli
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  allow_failure: false
  only:
    - test
    - main


deploy_test:
  stage: deploy
  script:
    - echo "deploy"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_PRIVATE_IP_TEST "sudo aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY && 
      docker pull $IMAGE_NAME:$IMAGE_TAG && 
      docker images && 
      docker stop ec2_test && 
      docker rm ec2_test && 
      docker rmi \$(docker images -q) && 
      docker run -d --name ec2_test -p 80:8000 $IMAGE_NAME:$IMAGE_TAG"
  only:
    - test

deploy_prod:
  stage: deploy
  script:
    - echo "deploy"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_PRIVATE_IP_PROD "sudo aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY && 
      docker pull $IMAGE_NAME:$IMAGE_TAG && 
      docker images && 
      docker stop ec2_prod && 
      docker rm ec2_prod && 
      docker rmi \$(docker images -q) && 
      docker run -d --name ec2_prod -p 80:8000 -e DJANGO_ALLOWED_HOSTS=$EC2_PRIVATE_IP_PROD $IMAGE_NAME:$IMAGE_TAG"
  only:
    - main


deploy_prod1:
  stage: deploy
  script:
    - echo "deploy"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - |
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_PRIVATE_IP_PROD1 "sudo aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY && 
      docker pull $IMAGE_NAME:$IMAGE_TAG && 
      docker images && 
      docker stop ec_prod1 && 
      docker rm ec_prod1 && 
      docker rmi \$(docker images -q) && 
      docker run -d --name ec_prod1 -p 80:8000 -e DJANGO_ALLOWED_HOSTS=$EC2_PRIVATE_IP_PROD1 $IMAGE_NAME:$IMAGE_TAG"
  only:
    - main


