stages:
  - build
  - test
  - deliver
  - deploy

image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: never
    - if: $CI_COMMIT_BRANCH != "main"
      when: always

test:
  stage: test
  script:
    - docker run -d --name test-container -p 8000:8000 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - sleep 10
    - docker ps
    - curl http://localhost:8000
    - docker stop test-container
    - docker rm test-container
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: never
    - if: $CI_COMMIT_BRANCH != "main"
      when: always

deliver:
  stage: deliver
  script:
    - docker run -d --name deliver-container -p 8000:8000 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - sleep 10
    - docker ps
    - curl http://localhost:8000
    - docker stop deliver-container
    - docker rm deliver-container
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: never
    - if: $CI_COMMIT_BRANCH != "main"
      when: always

deploy:
  stage: deploy
  script:
    - docker run -d --name deploy-container -p 8000:8000 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - sleep 10
    - docker ps
    - curl http://localhost:8000
    - docker stop deploy-container
    - docker rm deploy-container
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_COMMIT_BRANCH != "main"
      when: never
