stages:
  - test
  - build
  - deploy


variables:
  IMAGE_NAME: $ECR_REGISTRY/devops-erenduyuk-pyeditorial
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA


test:
  stage: test
  script:
    - echo "test"

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apk add aws-cli
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  when: manual



deploy:
  stage: deploy
  script:
    - echo "deploy"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@$EC2_PUBLIC_IP_PROD << EOF
        $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY)
        docker pull $ECR_REGISTRY/$IMAGE_NAME:$760bb9ca
        docker stop pyeditorial_web || true
        docker rm pyeditorial_web || true
        docker run -d --name pyeditorial_web -p 80:8000 $ECR_REGISTRY/$IMAGE_NAME:$760bb9ca
      EOF

